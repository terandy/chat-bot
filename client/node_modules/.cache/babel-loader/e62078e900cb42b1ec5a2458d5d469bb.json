{"ast":null,"code":"var _jsxFileName = \"/Users/teresalacroix/Dev/chat-bot/client/src/components/nav/Nav.tsx\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { NAV_HEIGHT, CONTENT_WIDTH } from '../../data';\nimport { useSelector } from 'react-redux';\nconst UpperNav = styled.div`\n  box-sizing: border-box;\n  border: red solid 1px;\n  height: ${NAV_HEIGHT};\n  width: 100%;\n  position: fixed;\n  top: ${props => props.topNavDisplay ? '0' : '-' + NAV_HEIGHT};\n  transition: top 0.4s ease-in-out;\n`;\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  max-width: ${CONTENT_WIDTH}; /*For margins*/\n  margin: auto; /*For margins*/\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: green solid 1px;\n  box-sizing: border-box;\n`;\n\nconst Nav = () => {\n  let topNavDisplay = useSelector(state => state.topNavDisplay);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    var scrollPos = 0;\n\n    window.onscroll = function () {\n      if (document.body.getBoundingClientRect().top > scrollPos) {\n        console.log('up');\n        toggleNav(false);\n      } else {\n        console.log('down');\n        toggleNav(true);\n      }\n\n      scrollPos = document.body.getBoundingClientRect().top;\n    };\n  }, []);\n\n  const toggleNav = content => {\n    dispatch({\n      type: 'toggle-topNavDisplay',\n      content: content\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(UpperNav, {\n    topNavDisplay: topNavDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"nav Bar\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"nav Bar\")));\n};\n\nexport default Nav;","map":{"version":3,"sources":["/Users/teresalacroix/Dev/chat-bot/client/src/components/nav/Nav.tsx"],"names":["React","useEffect","styled","NAV_HEIGHT","CONTENT_WIDTH","useSelector","UpperNav","div","props","topNavDisplay","Container","Nav","state","dispatch","useDispatch","scrollPos","window","onscroll","document","body","getBoundingClientRect","top","console","log","toggleNav","content","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,YAA1C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAMA,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAiB;;;YAG7BJ,UAAW;;;SAGdK,KAAK,IAAKA,KAAK,CAACC,aAAN,GAAsB,GAAtB,GAA4B,MAAMN,UAAY;;CANjE;AAUA,MAAMO,SAAS,GAAGR,MAAM,CAACK,GAAI;;;eAGdH,aAAc;;;;;;;CAH7B;;AAcA,MAAMO,GAAoB,GAAG,MAAM;AACjC,MAAIF,aAAa,GAAGJ,WAAW,CAAEO,KAAD,IAAsBA,KAAK,CAACH,aAA7B,CAA/B;AACA,QAAMI,QAAQ,GAAGC,WAAW,EAA5B;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,SAAS,GAAG,CAAhB;;AACAC,IAAAA,MAAM,CAACC,QAAP,GAAkB,YAAW;AAC3B,UAAIC,QAAQ,CAACC,IAAT,CAAcC,qBAAd,GAAsCC,GAAtC,GAA4CN,SAAhD,EAA2D;AACzDO,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAC,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAHD,MAGO;AACLF,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACDT,MAAAA,SAAS,GAAGG,QAAQ,CAACC,IAAT,CAAcC,qBAAd,GAAsCC,GAAlD;AACD,KATD;AAUD,GAZQ,EAYN,EAZM,CAAT;;AAaA,QAAMG,SAAS,GAAIC,OAAD,IAAsB;AACtCZ,IAAAA,QAAQ,CAAC;AAAEa,MAAAA,IAAI,EAAE,sBAAR;AAAgCD,MAAAA,OAAO,EAAEA;AAAzC,KAAD,CAAR;AACD,GAFD;;AAGA,sBACE,oBAAC,QAAD;AAAU,IAAA,aAAa,EAAEhB,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,CADF;AAQD,CA3BD;;AA6BA,eAAeE,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { NAV_HEIGHT, CONTENT_WIDTH } from '../../data';\nimport { useSelector } from 'react-redux';\n\ninterface Props {}\ninterface StyledProps {\n  topNavDisplay: boolean;\n}\nconst UpperNav = styled.div<StyledProps>`\n  box-sizing: border-box;\n  border: red solid 1px;\n  height: ${NAV_HEIGHT};\n  width: 100%;\n  position: fixed;\n  top: ${props => (props.topNavDisplay ? '0' : '-' + NAV_HEIGHT)};\n  transition: top 0.4s ease-in-out;\n`;\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  max-width: ${CONTENT_WIDTH}; /*For margins*/\n  margin: auto; /*For margins*/\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: green solid 1px;\n  box-sizing: border-box;\n`;\ninterface RootState {\n  topNavDisplay: boolean;\n}\nconst Nav: React.FC<Props> = () => {\n  let topNavDisplay = useSelector((state: RootState) => state.topNavDisplay);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    var scrollPos = 0;\n    window.onscroll = function() {\n      if (document.body.getBoundingClientRect().top > scrollPos) {\n        console.log('up');\n        toggleNav(false);\n      } else {\n        console.log('down');\n        toggleNav(true);\n      }\n      scrollPos = document.body.getBoundingClientRect().top;\n    };\n  }, []);\n  const toggleNav = (content: boolean) => {\n    dispatch({ type: 'toggle-topNavDisplay', content: content });\n  };\n  return (\n    <UpperNav topNavDisplay={topNavDisplay}>\n      <Container>\n        <div>nav Bar</div>\n        <div>nav Bar</div>\n      </Container>\n    </UpperNav>\n  );\n};\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}