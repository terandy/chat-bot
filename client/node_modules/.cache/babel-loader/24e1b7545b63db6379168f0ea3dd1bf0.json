{"ast":null,"code":"var _jsxFileName = \"/Users/teresalacroix/Dev/chat-bot/client/src/components/nav/Nav.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { NAV_HEIGHT, CONTENT_WIDTH } from '../../data';\nimport { useSelector, useDispatch } from 'react-redux';\nconst UpperNav = styled.div`\n  z-index: 1000;\n  box-sizing: border-box;\n  background-color: white;\n  border-bottom: 2px solid lightgrey;\n  height: ${NAV_HEIGHT};\n  width: 100%;\n  position: fixed;\n  top: ${props => props.topNavDisplay ? '0' : '-' + NAV_HEIGHT};\n  transition: top 0.4s ease-in-out;\n`;\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  max-width: ${CONTENT_WIDTH}; /*For margins*/\n  margin: auto; /*For margins*/\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-sizing: border-box;\n  a {\n    margin-right: 10px;\n  }\n`;\n\nconst Nav = () => {\n  const dispatch = useDispatch();\n  let topNavDisplay = useSelector(state => state.topNavDisplay);\n  let topNavDisplayRef = useRef();\n  topNavDisplayRef.current = topNavDisplay;\n\n  const toggleNav = content => {\n    dispatch({\n      type: 'toggle-topNavDisplay',\n      content: content\n    });\n  };\n\n  useEffect(() => {\n    var scrollPos = 0;\n\n    window.onscroll = () => {\n      let position = document.body.getBoundingClientRect().top;\n      console.log(position);\n      console.log('document.body.clientHeight', document.body.clientHeight - window.innerHeight);\n\n      if (position < 0 && position > document.body.clientHeight - window.innerHeight) {\n        if (position > scrollPos) {\n          if (!topNavDisplayRef.current) {\n            console.log('UP', position);\n            toggleNav(true);\n          }\n        } else {\n          if (topNavDisplayRef.current) {\n            console.log('DOWN', position);\n            toggleNav(false);\n          }\n        }\n      }\n\n      scrollPos = document.body.getBoundingClientRect().top;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(UpperNav, {\n    topNavDisplay: topNavDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/messenger/1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Messages\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"nav Bar\")));\n};\n\nexport default Nav;","map":{"version":3,"sources":["/Users/teresalacroix/Dev/chat-bot/client/src/components/nav/Nav.tsx"],"names":["React","useEffect","useRef","styled","Link","NAV_HEIGHT","CONTENT_WIDTH","useSelector","useDispatch","UpperNav","div","props","topNavDisplay","Container","Nav","dispatch","state","topNavDisplayRef","current","toggleNav","content","type","scrollPos","window","onscroll","position","document","body","getBoundingClientRect","top","console","log","clientHeight","innerHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,YAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAMA,MAAMC,QAAQ,GAAGN,MAAM,CAACO,GAAiB;;;;;YAK7BL,UAAW;;;SAGdM,KAAK,IAAKA,KAAK,CAACC,aAAN,GAAsB,GAAtB,GAA4B,MAAMP,UAAY;;CARjE;AAYA,MAAMQ,SAAS,GAAGV,MAAM,CAACO,GAAI;;;eAGdJ,aAAc;;;;;;;;;CAH7B;;AAiBA,MAAMQ,GAAoB,GAAG,MAAM;AACjC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAII,aAAa,GAAGL,WAAW,CAAES,KAAD,IAAsBA,KAAK,CAACJ,aAA7B,CAA/B;AACA,MAAIK,gBAAgB,GAAGf,MAAM,EAA7B;AACAe,EAAAA,gBAAgB,CAACC,OAAjB,GAA2BN,aAA3B;;AACA,QAAMO,SAAS,GAAIC,OAAD,IAAsB;AACtCL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,sBAAR;AAAgCD,MAAAA,OAAO,EAAEA;AAAzC,KAAD,CAAR;AACD,GAFD;;AAGAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,SAAS,GAAG,CAAhB;;AACAC,IAAAA,MAAM,CAACC,QAAP,GAAkB,MAAM;AACtB,UAAIC,QAAQ,GAAGC,QAAQ,CAACC,IAAT,CAAcC,qBAAd,GAAsCC,GAArD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAK,MAAAA,OAAO,CAACC,GAAR,CACE,4BADF,EAEEL,QAAQ,CAACC,IAAT,CAAcK,YAAd,GAA6BT,MAAM,CAACU,WAFtC;;AAIA,UACER,QAAQ,GAAG,CAAX,IACAA,QAAQ,GAAGC,QAAQ,CAACC,IAAT,CAAcK,YAAd,GAA6BT,MAAM,CAACU,WAFjD,EAGE;AACA,YAAIR,QAAQ,GAAGH,SAAf,EAA0B;AACxB,cAAI,CAACL,gBAAgB,CAACC,OAAtB,EAA+B;AAC7BY,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBN,QAAlB;AACAN,YAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,SALD,MAKO;AACL,cAAIF,gBAAgB,CAACC,OAArB,EAA8B;AAC5BY,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,QAApB;AACAN,YAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF;AACF;;AACDG,MAAAA,SAAS,GAAGI,QAAQ,CAACC,IAAT,CAAcC,qBAAd,GAAsCC,GAAlD;AACD,KAxBD;AAyBD,GA3BQ,EA2BN,EA3BM,CAAT;AA6BA,sBACE,oBAAC,QAAD;AAAU,IAAA,aAAa,EAAEjB,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADF,CADF;AAWD,CAhDD;;AAkDA,eAAeE,GAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { NAV_HEIGHT, CONTENT_WIDTH } from '../../data';\nimport { useSelector, useDispatch } from 'react-redux';\n\ninterface Props {}\ninterface StyledProps {\n  topNavDisplay: boolean;\n}\nconst UpperNav = styled.div<StyledProps>`\n  z-index: 1000;\n  box-sizing: border-box;\n  background-color: white;\n  border-bottom: 2px solid lightgrey;\n  height: ${NAV_HEIGHT};\n  width: 100%;\n  position: fixed;\n  top: ${props => (props.topNavDisplay ? '0' : '-' + NAV_HEIGHT)};\n  transition: top 0.4s ease-in-out;\n`;\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  max-width: ${CONTENT_WIDTH}; /*For margins*/\n  margin: auto; /*For margins*/\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-sizing: border-box;\n  a {\n    margin-right: 10px;\n  }\n`;\ninterface RootState {\n  topNavDisplay: boolean;\n  innercontainerRef: HTMLDivElement;\n}\nconst Nav: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  let topNavDisplay = useSelector((state: RootState) => state.topNavDisplay);\n  let topNavDisplayRef = useRef<boolean>();\n  topNavDisplayRef.current = topNavDisplay;\n  const toggleNav = (content: boolean) => {\n    dispatch({ type: 'toggle-topNavDisplay', content: content });\n  };\n  useEffect(() => {\n    var scrollPos = 0;\n    window.onscroll = () => {\n      let position = document.body.getBoundingClientRect().top;\n      console.log(position);\n      console.log(\n        'document.body.clientHeight',\n        document.body.clientHeight - window.innerHeight\n      );\n      if (\n        position < 0 &&\n        position > document.body.clientHeight - window.innerHeight\n      ) {\n        if (position > scrollPos) {\n          if (!topNavDisplayRef.current) {\n            console.log('UP', position);\n            toggleNav(true);\n          }\n        } else {\n          if (topNavDisplayRef.current) {\n            console.log('DOWN', position);\n            toggleNav(false);\n          }\n        }\n      }\n      scrollPos = document.body.getBoundingClientRect().top;\n    };\n  }, []);\n\n  return (\n    <UpperNav topNavDisplay={topNavDisplay}>\n      <Container>\n        <div>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/messenger/1\">Messages</Link>\n        </div>\n        <div>nav Bar</div>\n      </Container>\n    </UpperNav>\n  );\n};\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}